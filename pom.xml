<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bitop.web.bisystemanalysisweb</groupId>
	<artifactId>bisystemanalysisweb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>bisystemanalysisweb</name>
	<!--<description>Demo project for Spring Boot</description>-->

	<!--<parent>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-parent</artifactId>-->
		<!--<version>1.5.6.RELEASE</version>-->
		<!--<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
	<!--</parent>-->

	<repositories>
		<repository>
			<id>mustang-maven-repo</id>
			<url>https://raw.githubusercontent.com/mustang2247/maven-repo/master/repository</url>
		</repository>

		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.SR3</spring-cloud.version>
		<spring-boot-version>1.5.6.RELEASE</spring-boot-version>

		<!--加上docker镜像构建的插件-->
		<docker.image.prefix>springio</docker.image.prefix>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${spring-boot-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>${spring-boot-version}</version>
			<!--<scope>provided</scope>-->
		</dependency>

		<!--    devtools可以实现页面热部署（即页面修改后会立即生效，
		这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），
     实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
     即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>${spring-boot-version}</version>
			<!--<optional>true</optional>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>
		<!--解决maven编译不过问题-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
			<version>1.3.4.RELEASE</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
			<!--<version>${spring-boot-version}</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.mybatis.spring.boot</groupId>-->
			<!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
			<!--<version>1.3.1</version>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<!--表单验证-->
		<dependency>
			<!--<groupId>org.hibernate</groupId>-->
			<!--<artifactId>hibernate-validator</artifactId>-->
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.2.Final</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-el</artifactId>
			<version>8.5.20</version>
		</dependency>

		<!--shiro-->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-aspectj</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.4.0</version>
		</dependency>
		<!-- shiro ehcache -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>1.4.0</version>
		</dependency>

		<!--添加  Thymeleaf Shiro Dialect 依赖-->
		<dependency>
			<groupId>com.github.theborakompanioni</groupId>
			<artifactId>thymeleaf-extras-shiro</artifactId>
			<version>2.0.0</version>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.thymeleaf.extras</groupId>-->
			<!--<artifactId>thymeleaf-extras-springsecurity4</artifactId>-->
			<!--<version>3.0.2.RELEASE</version>-->
		<!--</dependency>-->

		<!--db-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.37</version>
		</dependency>
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.1</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.24</version>
		</dependency>

		<dependency>
			<groupId>com.bitop.common</groupId>
			<artifactId>skeleton</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>com.hoolai.ccgames</groupId>-->
			<!--<artifactId>bi-gate-client</artifactId>-->
			<!--<version>0.1.0</version>-->
			<!--&lt;!&ndash;<scope>provided</scope>&ndash;&gt;-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot-version}</version>
			<scope>test</scope>
		</dependency>

		<!--log4j2-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<version>${spring-boot-version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<envdir>dev/</envdir>
				<log4j.level>DEBUG</log4j.level>
				<log4j.appender>stdout</log4j.appender>
				<profileActive>dev</profileActive>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<envdir>test/</envdir>
				<log4j.level>DEBUG</log4j.level>
				<log4j.appender>dailyLog</log4j.appender>
				<log.dir>./logs/bigate</log.dir>
				<profileActive>test</profileActive>
			</properties>
		</profile>

		<profile>
			<id>qcloud</id>
			<properties>
				<envdir>qcloud/</envdir>
				<log4j.level>DEBUG</log4j.level>
				<log4j.appender>dailyLog</log4j.appender>
				<log.dir>./logs/bigate</log.dir>
				<profileActive>qcloud</profileActive>
			</properties>
		</profile>

	</profiles>

	<build>
		<finalName>bisystemanalysisweb</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-version}</version>
				<configuration>
					<fork>true</fork>
					<mainClass>com.bianalysis.data.client.Application</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!--加上docker镜像构建的插件 http://blog.csdn.net/forezp/article/details/71024219 -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>application.properties</exclude>
					<exclude>application-dev.properties</exclude>
					<exclude>application-test.properties</exclude>
					<exclude>application-qcloud.properties</exclude>
				</excludes>
			</resource>

			<resource>
				<filtering>true</filtering>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>application-${profileActive}.properties</include>
					<include>application.properties</include>
				</includes>
			</resource>
		</resources>

	</build>



</project>
